name: build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Cache
        uses: actions/cache@v3
        id: deno-cache
        with:
          path: ~/.cache/deno
          key: ${{ runner.os }}-deno-${{ hashFiles('deno.lock') }}
          restore-keys: |
            ${{ runner.os }}-deno-

      - name: Format
        run: deno fmt --check

      - name: Lint
        run: deno lint

      - name: Check
        run: deno check main.tsx

      - name: Build
        run: deno task build

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/
          retention-days: 1

  # deploy:
  #   name: Deploy
  #   runs-on: ubuntu-latest
  #   needs: build
  #   # if: github.event.pull_request.merged == true && github.ref == 'refs/heads/main'
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  #   permissions:
  #     id-token: write
  #   steps:
  #     - name: Download
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: dist
  #     - name: Upload to Deno Deploy
  #       uses: denoland/deployctl@v1
  #       with:
  #         project: deno-template
  #         entrypoint: main.js
